{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '46168146-32b0147d59d6daaf7b97d8253'; \nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query, page = 1) {\n  try {\n    const response = await axios.get(`${BASE_URL}`, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page: page,\n        per_page: 15,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n","\nimport { fetchImages } from './js/pixabay-api.js';\nimport { renderImages, showError, showLoader, hideLoader } from './js/render-functions.js';\n\nconst form = document.querySelector('.search-form');\nconst input = document.querySelector('.search-input');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreBtn = document.querySelector('.load-more');\nlet query = '';\nlet page = 1;\n\nform.addEventListener('submit', async (event) => {\n  event.preventDefault();\n  query = input.value.trim();\n  if (query === '') {\n    showError('Please enter a search query');\n    return;\n  }\n\n  page = 1;\n  gallery.innerHTML = '';\n  loadMoreBtn.style.display = 'none';\n  showLoader();\n\n  try {\n    const data = await fetchImages(query, page);\n    hideLoader();\n    if (data.hits.length === 0) {\n      showError('Sorry, there are no images matching your search query. Please try again!');\n    } else {\n      renderImages(data.hits);\n      loadMoreBtn.style.display = 'block';\n    }\n  } catch (error) {\n    hideLoader();\n    showError('Failed to fetch images. Please try again later.');\n  }\n});\n\nloadMoreBtn.addEventListener('click', async () => {\n  page += 1;\n  showLoader();\n\n  try {\n    const data = await fetchImages(query, page);\n    hideLoader();\n    renderImages(data.hits);\n\n    if (page * 15 >= data.totalHits) {\n      loadMoreBtn.style.display = 'none';\n      showError(\"We're sorry, but you've reached the end of search results.\");\n    }\n\n    const { height: cardHeight } = document.querySelector('.gallery').firstElementChild.getBoundingClientRect();\n    window.scrollBy({\n      top: cardHeight * 2,\n      behavior: 'smooth',\n    });\n  } catch (error) {\n    hideLoader();\n    showError('Failed to fetch images. Please try again later.');\n  }\n});\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","axios","error","form","input","gallery","loadMoreBtn","event","showError","showLoader","data","hideLoader","renderImages","cardHeight"],"mappings":"+HAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAG,CACjD,GAAI,CAYF,OAXiB,MAAMC,EAAM,IAAI,GAAGJ,CAAQ,GAAI,CAC9C,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMC,EACN,SAAU,EACX,CACP,CAAK,GACe,IACjB,OAAQE,EAAO,CACd,MAAMA,CACP,CACH,CClBA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAQ,SAAS,cAAc,eAAe,EAC9CC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAc,SAAS,cAAc,YAAY,EACvD,IAAIP,EAAQ,GACRC,EAAO,EAEXG,EAAK,iBAAiB,SAAU,MAAOI,GAAU,CAG/C,GAFAA,EAAM,eAAc,EACpBR,EAAQK,EAAM,MAAM,OAChBL,IAAU,GAAI,CAChBS,EAAU,6BAA6B,EACvC,MACD,CAEDR,EAAO,EACPK,EAAQ,UAAY,GACpBC,EAAY,MAAM,QAAU,OAC5BG,IAEA,GAAI,CACF,MAAMC,EAAO,MAAMZ,EAAYC,EAAOC,CAAI,EAC1CW,IACID,EAAK,KAAK,SAAW,EACvBF,EAAU,0EAA0E,GAEpFI,EAAaF,EAAK,IAAI,EACtBJ,EAAY,MAAM,QAAU,QAE/B,MAAe,CACdK,IACAH,EAAU,iDAAiD,CAC5D,CACH,CAAC,EAEDF,EAAY,iBAAiB,QAAS,SAAY,CAChDN,GAAQ,EACRS,IAEA,GAAI,CACF,MAAMC,EAAO,MAAMZ,EAAYC,EAAOC,CAAI,EAC1CW,IACAC,EAAaF,EAAK,IAAI,EAElBV,EAAO,IAAMU,EAAK,YACpBJ,EAAY,MAAM,QAAU,OAC5BE,EAAU,4DAA4D,GAGxE,KAAM,CAAE,OAAQK,CAAU,EAAK,SAAS,cAAc,UAAU,EAAE,kBAAkB,wBACpF,OAAO,SAAS,CACd,IAAKA,EAAa,EAClB,SAAU,QAChB,CAAK,CACF,MAAe,CACdF,IACAH,EAAU,iDAAiD,CAC5D,CACH,CAAC"}